[{"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reducers\\index.js":"4","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\sagas\\index.js":"5","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\routes.js":"6","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\sagas\\ItemSaga.js":"7","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reducers\\ItemReducer.js":"8","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\getItems.js":"9","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\addItemAPI.js":"10","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\updateItemAPI.js":"11","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\searchItemAPI.js":"12","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\deleteItemAPI.js":"13","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\constant.js":"14","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\index.js":"15","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\HomePage.js":"16","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\ItemPage.js":"17","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\containers\\ItemPageContainer.js":"18","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\components\\Items.js":"19","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\actions\\ItemPageActions.js":"20","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\paginate.js":"21"},{"size":879,"mtime":1608806674718,"results":"22","hashOfConfig":"23"},{"size":220,"mtime":1608807663369,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":138,"mtime":1608807944772,"results":"26","hashOfConfig":"23"},{"size":179,"mtime":1608800758557,"results":"27","hashOfConfig":"23"},{"size":402,"mtime":1608807744642,"results":"28","hashOfConfig":"23"},{"size":4003,"mtime":1609925130702,"results":"29","hashOfConfig":"23"},{"size":2299,"mtime":1609925978295,"results":"30","hashOfConfig":"23"},{"size":443,"mtime":1608803706216,"results":"31","hashOfConfig":"23"},{"size":547,"mtime":1608822427674,"results":"32","hashOfConfig":"23"},{"size":567,"mtime":1609122081157,"results":"33","hashOfConfig":"23"},{"size":466,"mtime":1609128325826,"results":"34","hashOfConfig":"23"},{"size":456,"mtime":1609129194878,"results":"35","hashOfConfig":"23"},{"size":1032,"mtime":1609757241214,"results":"36","hashOfConfig":"23"},{"size":109,"mtime":1608801458266,"results":"37","hashOfConfig":"23"},{"size":310,"mtime":1608802040381,"results":"38","hashOfConfig":"23"},{"size":343,"mtime":1608802257801,"results":"39","hashOfConfig":"23"},{"size":2261,"mtime":1609921173986,"results":"40","hashOfConfig":"23"},{"size":5957,"mtime":1609932048796,"results":"41","hashOfConfig":"23"},{"size":785,"mtime":1609757285559,"results":"42","hashOfConfig":"23"},{"size":471,"mtime":1609925122561,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"2jsfq",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\index.js",["92"],"import reportWebVitals from './reportWebVitals';\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport App from './App'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger))\nsagaMiddleware.run(rootSaga)\nrender(\n    <Provider store={store}>\n        <App />/* */\n    </Provider>\n    ,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["93","94"],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\sagas\\index.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\routes.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\sagas\\ItemSaga.js",["95"],"import { put, take, takeEvery } from 'redux-saga/effects'\r\nimport getItems from '../fetchAPI/getItems'\r\nimport addItemAPI from '../fetchAPI/addItemAPI'\r\nimport * as types from '../constant'\r\nimport deleteItemAPI from '../fetchAPI/deleteItemAPI'\r\nimport updateItemAPI from '../fetchAPI/updateItemAPI'\r\nimport searchItemAPI from '../fetchAPI/searchItemAPI'\r\nimport paginate from '../fetchAPI/paginate'\r\n\r\nfunction* getListItem() {\r\n    try {\r\n        const res = yield getItems()\r\n        yield put({\r\n            type: types.GET_ITEM_SUCCESS,\r\n            payload: res\r\n        })\r\n        // yield put({\r\n        //     type: types.PAGINATE_ITEM_REQUEST,\r\n        //     payload:res\r\n        // })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.GET_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\nfunction* paginateItem(action) {\r\n    try {\r\n        const data = action.payload\r\n        const res = yield paginate(data)\r\n        yield put({\r\n            type: types.PAGINATE_ITEM_SUCCESS,\r\n            payload: res\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.PAGINATE_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\nfunction* addItemSaga(action) {\r\n    console.log(action.payload)\r\n    try {\r\n        const dataToApi = {\r\n            name: action.payload\r\n        }\r\n        yield addItemAPI(dataToApi)\r\n        yield put({\r\n            type: types.ADD_ITEM_SUCCESS\r\n        })\r\n        yield put({\r\n            type: types.GET_ITEM_REQUEST\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.ADD_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction* deleteItemSaga(action) {\r\n    try {\r\n        const dataToApi = {\r\n            id: action.payload.id,\r\n        }\r\n        yield deleteItemAPI(dataToApi)\r\n        yield put({\r\n            type: types.DELETE_ITEM_SUCCESS,\r\n        })\r\n        yield put({\r\n            type: types.SEARCH_ITEM_REQUEST,\r\n            payload: action.payload.textField\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.DELETE_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction* updateItemSaga(action) {\r\n    console.log(action.payload.name)\r\n    try {\r\n        const dataToApi = {\r\n            id: action.payload.id,\r\n            name: action.payload.name\r\n        }\r\n        yield updateItemAPI(dataToApi)\r\n        yield put({\r\n            type: types.UPDATE_ITEM_SUCCESS\r\n        })\r\n        yield put({\r\n            type: types.SEARCH_ITEM_REQUEST,\r\n            payload:action.payload.textField\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.UPDATE_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction* searchListItem(action) {\r\n    try {\r\n        const dataToApi = {\r\n            textSearch: action.payload\r\n        }\r\n        const res = yield searchItemAPI(dataToApi)\r\n        yield put({\r\n            type: types.SEARCH_ITEM_SUCCESS,\r\n            payload: {\r\n                listItem: res,\r\n                textField: action.payload\r\n            }\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: types.SEARCH_ITEM_FAILURE,\r\n            payload: {\r\n                errorMessage: error.message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const ItemSaga = [\r\n    takeEvery(types.GET_ITEM_REQUEST, getListItem),\r\n    takeEvery(types.ADD_ITEM_REQUEST, addItemSaga),\r\n    takeEvery(types.DELETE_ITEM_REQUEST, deleteItemSaga),\r\n    takeEvery(types.UPDATE_ITEM_REQUEST, updateItemSaga),\r\n    takeEvery(types.SEARCH_ITEM_REQUEST, searchListItem),\r\n    takeEvery(types.PAGINATE_ITEM_REQUEST, paginateItem)\r\n\r\n];","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\reducers\\ItemReducer.js",["96","97"],"import * as types from '../constant'\r\nconst DEFAULT_STATE = {\r\n    listItem: [],\r\n    isFetching: false,\r\n    error: false,\r\n    errorMessage: null,\r\n    data: \"\",\r\n    textField:\"\",\r\n    data1: []\r\n}\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.PAGINATE_ITEM_REQUEST:\r\n        case types.SEARCH_ITEM_REQUEST:\r\n        case types.UPDATE_ITEM_REQUEST:\r\n        case types.DELETE_ITEM_REQUEST:\r\n        case types.ADD_ITEM_REQUEST:\r\n        case types.GET_ITEM_REQUEST:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case types.PAGINATE_ITEM_SUCCESS:\r\n        case types.GET_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                listItem: action.payload\r\n            }\r\n        case types.UPDATE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: false,\r\n                errorMessage: null\r\n            }\r\n        case types.DELETE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: false,\r\n                errorMessage: null,\r\n                data: action.payload,\r\n            }\r\n        case types.ADD_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: false,\r\n                errorMessage: null\r\n            }\r\n        case types.SEARCH_ITEM_SUCCESS:\r\n            //const {listItem,textField} = action.payload\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                listItem:action.payload.listItem,\r\n                textField:action.payload.textField\r\n            }\r\n        case types.PAGINATE_ITEM_FAILURE:\r\n        case types.UPDATE_ITEM_FAILURE:\r\n        case types.UPDATE_ITEM_FAILURE:\r\n        case types.DELETE_ITEM_FAILURE:\r\n        case types.ADD_ITEM_FAILURE:\r\n        case types.GET_ITEM_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: true,\r\n                errorMessage: action.payload.errorMessage\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\getItems.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\addItemAPI.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\updateItemAPI.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\searchItemAPI.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\deleteItemAPI.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\constant.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\index.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\HomePage.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\pages\\ItemPage.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\containers\\ItemPageContainer.js",["98","99","100"],"import React from 'react'\r\nimport Items from '../components/Items'\r\nimport * as actions from '../actions/ItemPageActions'\r\nimport { connect } from 'react-redux'\r\nimport { ItemSaga } from '../sagas/ItemSaga'\r\nimport Author from '../components/Items'\r\n\r\nclass ItemPageContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initLoad()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isLoading === true\r\n                    ?\r\n                    <img src=\"https://data.whicdn.com/images/42829097/original.gif\" />\r\n                    :\r\n                    <Items name=\"abc\"  ham={(data) => {\r\n                        this.props.addDispatch(data)\r\n                    }} hamDelete={(data) => {\r\n                        this.props.deleteDispatch(data)\r\n                    }} hamUpdate={(data) => {\r\n                        this.props.updateDispatch(data)\r\n                    }} hamSearch={(data) => {\r\n                        this.props.searchDispatch(data)\r\n                    }} hamPaginate={(data)=>{\r\n                        this.props.paginateDispatch(data)\r\n                    }} {...this.props} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items.listItem,\r\n        isLoading: state.items.isFetching,\r\n        textField:state.items.textField\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return (\r\n        {\r\n            initLoad: () => {\r\n                dispatch(actions.getListItem())\r\n            },\r\n            addDispatch: (dauvao) => {\r\n                dispatch(actions.addItemAction(dauvao))\r\n            },\r\n            deleteDispatch: (data) => {\r\n                dispatch(actions.deleteItemAction(data))\r\n            },\r\n            updateDispatch: (data) => {\r\n                dispatch(actions.updateItemAction(data))\r\n            },\r\n            searchDispatch: (data) => {\r\n                dispatch(actions.searchItemAction(data))\r\n            },\r\n            paginateDispatch: (data) => {\r\n                dispatch(actions.paginateItem(data))\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPageContainer)","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\components\\Items.js",["101","102","103","104"],"import React, { Component } from 'react'\r\n\r\nclass Items extends Component {\r\n    state = {\r\n        inputAdd: \"\",\r\n        inputSearch: \"\",\r\n        objectDelete: {\r\n            id: \"\",\r\n            text: \"\"\r\n        },\r\n        textField: \"\",\r\n        totalPage: \"\",\r\n        page: \"1\",\r\n        length: \"\",\r\n    }\r\n    handleAdd = (data) => {\r\n        this.setState({ inputAdd: data, textField: data })\r\n\r\n        console.log('du lieu in add', this.state.inputAdd)\r\n    }\r\n\r\n    handleAddButton = () => {\r\n        // console.log('đây là nút: ', this.state.inputAdd)\r\n        // console.log('Prop', this.props.name)\r\n        // const dt = this.state.inputAdd\r\n        // console.log('du lieu dt',dt)\r\n        // this.setState({inputSearch:dt})\r\n        // console.log('search ',this.state.inputSearch)\r\n        // console.log('search ',this.state.inputSearch)\r\n\r\n        this.props.ham(this.state.inputAdd)\r\n    }\r\n\r\n    handleDelete = (data_id) => {\r\n\r\n        const data = {\r\n            id: data_id,\r\n            textField: this.props.textField\r\n        }\r\n        console.log('du lieu handleDelete ' + data.textField)\r\n        this.props.hamDelete(data)\r\n    }\r\n\r\n    //sửa\r\n    handleUpdate = (data_id) => {\r\n        const data = {\r\n            id: data_id,\r\n            name: this.state.inputAdd,\r\n            textField: this.props.textField\r\n        }\r\n        this.props.hamUpdate(data)\r\n\r\n    }\r\n\r\n    //search\r\n    handleSearch = (length) => {\r\n        //this.setState({ inputSearch: data })\r\n        // const text = {\r\n        //     txt: data\r\n        // }\r\n        // const dt = this.state.inputAdd\r\n        // this.setState({\r\n        //     objectDelete: {\r\n        //         ...this.state.objectDelete,\r\n        //         text: dt\r\n        //     }\r\n        // })\r\n        this.setState({\r\n            inputSearch: this.state.inputAdd\r\n        })\r\n        this.props.hamSearch(this.state.inputAdd);\r\n        console.log('Dữ liệu listdata', length)\r\n    }\r\n    handlePaginate = (data) => {\r\n        this.props.hamPaginate(data)\r\n    }\r\n    hamXuLy = (ar) => {\r\n        let arr = [];\r\n        for (let index = 1; index < (ar/3)+1\r\n        ; index++) {\r\n            arr.push(<button onClick={()=>{\r\n                let da = index\r\n                this.props.hamPaginate(da)\r\n            }}>{index}</button>)\r\n        }\r\n        return (arr)\r\n\r\n    }\r\n    render() {\r\n        let listData = [];\r\n        let btt = [];\r\n        let pagin = []\r\n        if (this.props.items) {\r\n            listData = this.props.items.map((item, key) => {\r\n                let dt = [\r\n                    <tr key={key}>\r\n                        <th>{item.id}</th>\r\n                        <th>{item.name}</th>\r\n                        <th><button onClick={() => {\r\n\r\n                            this.handleDelete(item.id)\r\n                        }}>Xóa</button></th>\r\n                        <th><button onClick={() => {\r\n                            this.handleUpdate(item.id)\r\n                        }}>Sửa</button></th>\r\n                    </tr>\r\n                ]\r\n                // let arr = [];\r\n                // for (let index = 1; index < 6; index++) {\r\n                //         arr.push(<button>{index}</button>)\r\n\r\n                // }\r\n                let dataMain = [\r\n                    dt\r\n                    //arr\r\n                ]\r\n                return (\r\n                    dataMain\r\n                )\r\n            })\r\n            pagin = this.hamXuLy(listData.length)\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div>\r\n                    <div>\r\n                        <input onChange={(e) => {\r\n                            this.handleAdd(e.target.value)\r\n                        }} onKeyPress={(e) => {\r\n                            if (e.key === \"Enter\") {\r\n                                this.handleAddButton()\r\n                            }\r\n                        }} />\r\n                        <button onClick={() => {\r\n                            this.handleAddButton()\r\n                        }}>Add</button>\r\n                        <button onClick={() => {\r\n\r\n                            this.handleDelete()\r\n                        }}>Delete</button>\r\n                        <button onClick={() => {\r\n                            this.handleSearch(listData.length)\r\n                        }}>Search</button>\r\n                        <button onClick={() => {\r\n                            this.handlePaginate()\r\n                        }}>Paginate</button>\r\n                        <button onClick={() => {\r\n                            this.hamXuLy()\r\n                        }}>Xử lý</button>\r\n                    </div>\r\n                    <table className=\"list-item\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th className=\"id\">ID của dữ liệu</th>\r\n                                <th className=\"name\">Tên của dữ liệu</th>\r\n                            </tr>\r\n                            {listData}\r\n                            <tr>\r\n                                <button onClick={() => {\r\n                                    this.handlePaginate()\r\n                                }}>1</button>\r\n                                <a onClick={() => {\r\n                                    this.handlePaginate(2)\r\n                                }}>2</a>\r\n                                <a onClick={() => {\r\n                                    this.handlePaginate(3)\r\n                                }}>3</a>\r\n                                <a onClick={() => {\r\n                                    this.handlePaginate(4)\r\n                                }}>4</a>\r\n\r\n                            </tr>\r\n                        {pagin}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Items;","C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\actions\\ItemPageActions.js",[],"C:\\Users\\Admin\\Desktop\\GITHUB\\my-project\\ReactJs\\test\\src\\fetchAPI\\paginate.js",[],{"ruleId":"105","severity":1,"message":"106","line":16,"column":16,"nodeType":"107","endLine":17,"endColumn":5},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":15,"nodeType":"114","messageId":"115","endLine":1,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":12,"column":1,"nodeType":"118","endLine":76,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":63,"column":9,"nodeType":"121","messageId":"122","endLine":63,"endColumn":40},{"ruleId":"112","severity":1,"message":"123","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"124","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":17,"column":21,"nodeType":"127","endLine":17,"endColumn":87},{"ruleId":"112","severity":1,"message":"128","line":91,"column":13,"nodeType":"114","messageId":"115","endLine":91,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":165,"column":33,"nodeType":"127","endLine":167,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":168,"column":33,"nodeType":"127","endLine":170,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":171,"column":33,"nodeType":"127","endLine":173,"endColumn":36},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'take' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'ItemSaga' is defined but never used.","'Author' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'btt' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]